##########################################################################
# This file contains MiCADO Profile data type
# definitions.
##########################################################################

tosca_definitions_version: tosca_2_0

metadata:
  template_name: data_types.yaml
  template_author: University of Westminster
  template_version: 0.1

description: >
  MiCADO Profile data type definitions

data_types:

  context_type:
    description: >-
      The context_type type defines data for cloud-init contextualisation, enabling dynamic configuration of instances during startup.
    properties:
      cloud_config:
        type: string
        required: false
        description: >-
          A cloud-init configuration script or YAML content used to configure the instance at boot time.
      append:
        type: boolean
        required: false
        description: >-
          Indicates whether the provided cloud configuration should be appended to the existing configuration.
      insert:
        type: boolean
        required: false
        description: >-
          Determines if the cloud configuration should be inserted at a specific point in the existing configuration.
      path:
        type: string
        required: false
        description: >-
          The file path where the cloud-init configuration should be applied or stored within the instance.

  ports_type:
    description: |
      Available properties for the ports setting in a container node.

      Supports Kubernetes flat ServiceSpec (ServiceSpec & ServicePort flattened),
      ContainerPort spec AND long syntax Docker compose port options
    properties:

      # Kubernetes ServicePort fields
      name:
        description: Name of port
        type: string
        required: false
      nodePort:
        description: Kubernetes nodePort assignment (30000-32767)
        type: integer
        required: false
        constraints:
        - greater_or_equal: 30000
        - less_or_equal: 32767
      port:
        description: Visible port (Kubernetes-style)
        type: integer
        required: false
      protocol:
        description: Protocol (Swarm & Kubernetes) - SCTP is Kube only
        type: string
        required: false
        constraints:
        - valid_values:
          - 'tcp'
          - 'TCP'
          - 'udp'
          - 'UDP'
          - 'SCTP'
      targetPort:
        description: Port inside container (Kubernetes-style)
        type: integer
        required: false

      # Kubernetes ContainerPort fields
      containerPort:
        description: |
          Give more info on exposed ports, omitting this does not
          prevent the port from being exposed (internally)
        type: integer
        required: false
      hostIP:
        description: Host IP to bind external port to
        type: string
        required: false
      hostPort:
        description: port to expose on the host. If HostNetwork then must == ContainerPort
        type: integer
        required: false

      # Docker Compose long syntax port options
      target:
        description: Port inside container (Swarm-style)
        type: integer
        required: false
      published:
        description: Visible port (Swarm-style)
        type: integer
        required: false
      mode:
        description: Port mode *translates to Kubernetes host port*
        type: string
        required: false
        constraints:
        - valid_values:
          - 'host'
          - 'ingress'

      # Kubernetes Service field
      metadata:
        description: Kubernetes space for adding metadata (such as service name)
        type: map
        required: false

      # Kubernetes ServiceSpec fields
      clusterIP:
        description: Kubernetes clusterIP assignment (10.0.0.1/24)
        type: string
        required: false
      externalIPs:
        description: list of IPs which nodes will also accept traffic for
        type: list
        required: false
      externalName:
        description: external reference which DNS component will return as a CNAME
        type: string
        required: false
      externalTrafficPolicy:
        description: route to node-local or cluster-wide endpoints
        type: string
        required: false
      healthCheckNodePort:
        description: healthcheck for LoadBalancer, node-local mode
        type: integer
        required: false
      loadBalancerIP:
        description: specify IP for LoadBalancer, if type is LB
        type: string
        required: false
      loadBalancerSourceRanges:
        description: restrict traffic to specified IPs
        type: list
        required: false
      ports:
        description: ServicePort definition (also supported in this map (one-level up))
        type: list
        required: false
      publishNotReadyAddresses:
        description: force publish NotReadyAddresses
        type: boolean
        required: false
      selector:
        description: overwrite the automatically generated selector of the service
        type: map
        required: false
      sessionAffinity:
        description: maintain session affinity
        type: string
        required: false
      sessionAffinityConfig:
        description: configurations of session affinity
        type: map
        required: false
      type:
        description: The Kubernetes equivalent of mode
        type: string
        required: false
        constraints:
        - valid_values:
          - 'ClusterIP'
          - 'NodePort'
          - 'LoadBalancer'
          - 'ExternalName'


  deploy_type:
    description: Available properties for Swarm specific orchestration
    properties:
      mode:
        type: string
        required: false
      replicas:
        type: integer
        required: false
      resources:
        type: resource_type
        required: false
      labels:
        type: map
        required: false
      placement:
        type: placement_type
        required: false
      restart_policy:
        type: map
        required: false
      update_config:
        type: map
        required: false


  resource_type:
    description: Available fields for Swarm deploy resources
    properties:
      cpus:
        type: string
        required: false
      memory:
        type: string
        required: false


  placement_type:
    description: Available fields for Swarm deploy placement
    properties:
      constraints:
        required: false
        type: list
      preferences:
        required: false
        type: list
