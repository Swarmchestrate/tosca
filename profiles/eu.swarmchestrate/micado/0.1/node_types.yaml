##########################################################################
# This file contains MiCADO Profile node type
# definitions.
##########################################################################

tosca_definitions_version: tosca_2_0

metadata:
  template_name: node_types.yaml
  template_author: University of Westminster
  template_version: 0.1

description: >
  MiCADO Profile node type definitions

imports:
  - url: ../../../org.oasis-open/simple/2.0/node_types.yaml
    namespace: tosca
  - url: ../../../org.oasis-open/simple/2.0/capability_types.yaml
    namespace: tosca
  - data_types.yaml
  - interface_types.yaml

node_types:

  Compute:
    description: >
      The MiCADO Compute node represents a virtual machine in the cloud
      that supports a container runtime.
    derived_from: tosca:Container.Runtime
    properties:
      context:
        type: context_type
        required: false
        description: >
          Custom context or metadata associated with the compute node, such as user-defined configuration or runtime data.
    capabilities:
      host:
        type: tosca:Compute
        description: >
          Provides hosting capabilities, allowing other components to be deployed on this compute node.
      os:
        type: tosca:OperatingSystem
        description: >
          Specifies the operating system running on this compute node.
      scalable:
        type: tosca:Scalable
        description: >
          Defines how the compute node can scale (e.g., number of instances, scaling policies).

  Compute.EC2:
    description: >
      An EC2 compute node.
    derived_from: Compute
    properties:
      region_name:
        type: string
        required: true
        description: >
          AWS region where the EC2 instance will be deployed (e.g., us-east-1, eu-west-1).
      image_id:
        type: string
        required: true
        description: >
          The ID of the Amazon Machine Image (AMI) used to launch the EC2 instance.
      instance_type:
        type: string
        required: true
        description: >
          The type of EC2 instance (e.g., t2.micro, m5.large) specifying compute resources.
      key_name:
        type: string
        required: false
        description: >
          The name of the SSH key pair used to access the EC2 instance.
      security_group_ids:
        type: list
        required: false
        entry_schema: string
        description: >
          A list of security group IDs that control inbound and outbound traffic for the EC2 instance.
      subnet_id:
        type: string
        required: false
        description: >
          The ID of the subnet in which to launch the EC2 instance.
      tags:
        type: map
        required: false
        entry_schema: string
        description: >
          Key-value pairs used to tag and categorise the EC2 instance (e.g., environment: production).

    interfaces:
      Occopus:
        type: Occopus
      Terraform:
        type: Terraform

  Container.Pod:
    description: |
      Generic description of a Kubernetes Pod
    derived_from: tosca:Container.Application
    interfaces:
      Kubernetes:
        type: Kubernetes
    requirements:
    - host:
        capability: tosca:Compute
        node: Compute
        relationship: tosca:HostedOn

  Container.OCI:
    description: |
      Generic description of an OCI compliant container
      featuring both Kubernetes and Docker style fields
    derived_from: tosca:Container.Application
    properties:

      # Kubernetes style field names
      # These field names are present in the ContainerSpec of a Pod
      # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core
      args:
        description: arguments to pass to entrypoint
        type: list
        entry_schema: string
        required: false
      command:
        description: command run by container (Kubernetes-style & Docker-list-style)
        type: list
        entry_schema: string
        required: false
      env:
        description: environment variables to pass to the container
        type: list
        entry_schema: string
        required: false
      envFrom:
        description: environment variables from a source
        type: list
        entry_schema: string
        required: false
      image:
        description: container image
        type: string
        required: false
      imagePullPolicy:
        description: Force pull an image
        type: string
        required: false
        constraints:
        - valid_values:
          - 'Always'
          - 'IfNotPresent'
      lifecycle:
        description: Kubernetes hooks for lifecycle management
        type: map
        entry_schema: string
        required: false
      livenessProbe:
        description: Kubernetes-style healthcheck
        type: map
        entry_schema: string
        required: false
      name:
        description: define the container name
        type: string
        required: false
      ports:
        description: ports to be forwarded (long-syntax Compose or flat Kubernetes ServiceSpec)
        type: list
        required: false
        entry_schema:
          type: ports_type
      readinessProbe:
        description: Kubernetes-style ready-check
        type: map
        entry_schema: string
        required: false
      resources:
        description: resource requirements for the container (Kubernetes-style)
        type: map
        entry_schema: string
        required: false
      securityContext:
        description: specify security options (Kubernetes-style)
        type: map
        entry_schema: string
        required: false
      stdin:
        description: allocate a buffer for stdin for this container (Kubernetes-style)
        type: boolean
        required: false
      stdinOnce:
        description: close the stdin channel after one attach
        type: boolean
        required: false
      terminationMessagePath:
        description: Kubernetes container path to write termination message
        type: string
        required: false
      terminationMessagePolicy:
        description: Kubernetes container termination message
        type: string
        required: false
      tty:
        description: allocate a TTY for the container (requires stdin set to true)
        type: boolean
        required: false
      volumeDevices:
        description: block volume devices to be used by the container
        type: list
        entry_schema: string
        required: false
      volumeMounts:
        description: pod volumes to mount inside container filesystems
        type: list
        entry_schema: string
        required: false
      workingDir:
        description: Kubernetes container working directory
        type: string
        required: false

      # Docker Swarm / Compose-style field names
      # If field name is the same across orchestrators, Kubernetes-style takes preference
      # Any Windows-only properties or properties ignored by Swarm are not included
      configs:
        description: point to created configs
        type: list
        entry_schema: string
        required: false
      container_name:
        description: the container name *translates to Kubernetes name*
        type: string
        required: false
      deploy:
        description: supports Swarm-only options of a Compose file
        type: deploy_type
        required: false
      dns:
        description: custom DNS servers *translates to Kubernetes PodSpec dnsConfig*
        type: list
        entry_schema: string
        required: false
      dns_search:
        description: custom DNS searches *translates to Kubernetes PodSpec dnsConfig*
        type: list
        entry_schema: string
        required: false
      entrypoint:
        description: command run by container (string) *translates to Kubernetes command*
        type: string
        required: false
      env_file:
        description: load environment vars from a file
        type: list
        entry_schema: string
        required: false
      environment:
        description: environment variables (map-style) *translates to Kubernetes env*
        type: map
        entry_schema: string
        required: false
      expose:
        description: ports to expose to other linked services
        type: list
        entry_schema: string
        required: false
      extra_hosts:
        description: host aliases to add to /etc/hosts
        type: list
        entry_schema: string
        required: false
      healthcheck:
        description: Docker-style healthcheck
        type: map
        entry_schema: string
        required: false
      init:
        description: run an init to forward signals, reap processes
        type: boolean
        required: false
      labels:
        description: Labels *translates to Kubernetes PodSpec labels*
        type: map
        entry_schema: string
        required: false
      logging:
        description: logging configuration
        type: map
        entry_schema: string
        required: false
      networks:
        description: network configuration
        type: map
        entry_schema: string
        required: false
      pid:
        description: option for using host PID *translates to Kubernetes hostPID*
        type: string
        required: false
      privileged:
        description: run with root equivalency *translates to Kubernetes SecurityContext*
        type: boolean
        required: false
      secrets:
        description: passing secrets
        type: list
        entry_schema: string
        required: false
      stdin_open:
        description: allocate a buffer for stdin *translates to Kubernetes stdin*
        type: boolean
        required: false
      stop_grace_period:
        description: when container is killed after shutdown *translates to Kubernetes grace...*
        type: string
        required: false
      stop_signal:
        description: signal to stop the container
        type: string
        required: false
      ulimits:
        description: override default ulimits of container
        type: map
        entry_schema: string
        required: false
      volumes:
        description: volumes to mount
        type: list
        entry_schema: string
        required: false
      working_dir:
        description: working directory *translates to Kubernetes workingDir*
        type: string
        required: false


    capabilities:
      scalable:
        type: tosca:Scalable

    interfaces:
      Kubernetes:
        type: Kubernetes
      Swarm:
        type: Swarm

    requirements:
    - pod:
        capability: tosca:Container
        node: Container.Pod
        relationship: tosca:HostedOn
    - host:
        capability: tosca:Compute
        node: Compute
        relationship: tosca:HostedOn
    - volume:
        capability: tosca:Attachment
        node: tosca:Abstract.Storage
        relationship: tosca:AttachesTo